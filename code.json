[{"id":"9541a9be.f4e998","type":"tab","label":"Models","disabled":false,"info":""},{"id":"8d5a863f.391318","type":"tab","label":"Function for define and retrieve model","disabled":false,"info":""},{"id":"1c510750.057029","type":"tab","label":"CRUD API for Models","disabled":false,"info":""},{"id":"e6545ee0.b4314","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"5ae68398.7fae3c","type":"subflow","name":"End Point Status","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"4709c7b5.9f14d8"}]}],"out":[{"x":1180,"y":220,"wires":[{"id":"f1d3176d.6a3c18","port":0}]}],"env":[],"color":"#DDAA99"},{"id":"bf4c1432.443d28","type":"function","z":"8d5a863f.391318","name":"Save To GlobalContext","func":"let require = global.get('require');\n\nglobal.set('SequelizeModel', {\n    User: msg.UserModel,\n    Admin: msg.AdminModel\n});\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":200,"wires":[["99d218ca.9fc9d8"]]},{"id":"f8036b31.ac6608","type":"function","z":"8d5a863f.391318","name":"AdminModel","func":"let require = global.get('require');\nconst { DataTypes } = require('sequelize');\n\nmsg.AdminModel = msg.sequelize.define('Admin', {\n  firstName: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  lastName: {\n    type: DataTypes.STRING\n  }\n});\nreturn msg;","outputs":1,"noerr":0,"x":394,"y":160,"wires":[["bf4c1432.443d28"]]},{"id":"f4f3e767.848408","type":"function","z":"8d5a863f.391318","name":"UserModel","func":"let require = global.get('require');\nconst { DataTypes } = require('sequelize');\n\nmsg.UserModel = msg.sequelize.define('User', {\n  firstName: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  lastName: {\n    type: DataTypes.STRING\n  }\n});\nmsg.UserModel.sync({alter:true})\n\nreturn msg;","outputs":1,"noerr":0,"x":396,"y":120,"wires":[["f8036b31.ac6608"]]},{"id":"a7b63d56.e5b84","type":"function","z":"8d5a863f.391318","name":"Init","func":"let require = global.get('require')\nconst { Sequelize } = require('sequelize');\nmsg.sequelize = new Sequelize('cam_qa_mayank', 'cgadmin@camillo-rental-db', 'cygrp#camillo914', {\n    host: 'camillo-rental-db.mysql.database.azure.com',\n    port: 3306,\n    dialect: 'mysql'\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":378,"y":80,"wires":[["f4f3e767.848408"]]},{"id":"5b789611.1f52b8","type":"inject","z":"8d5a863f.391318","name":"Create Model","topic":"","payload":"CreateModel","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":167,"y":80,"wires":[["a7b63d56.e5b84"]]},{"id":"99d218ca.9fc9d8","type":"function","z":"8d5a863f.391318","name":"Define Async Function","func":"async function getSequelizeModel() {\n  const User = global.get('SequelizeModel').User;\n  let promise = new Promise((resolve, reject) => {\n    resolve(User.findAll())\n  });\n  return await promise;\n}\n\nglobal.set('getSequelizeModel', getSequelizeModel);\n","outputs":0,"noerr":0,"x":417,"y":240,"wires":[],"icon":"font-awesome/fa-arrow-circle-up"},{"id":"99592eb8.4e29","type":"debug","z":"8d5a863f.391318","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":730,"y":560,"wires":[]},{"id":"5779d8b0.8e6388","type":"function","z":"8d5a863f.391318","name":"function for client","func":"msg.payload = global.get(\"SequelizeModelValue['USER']\");\n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":560,"wires":[["99592eb8.4e29"]]},{"id":"af28c2c2.617ef","type":"inject","z":"8d5a863f.391318","name":"","topic":"","payload":"User","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":170,"y":560,"wires":[["5779d8b0.8e6388"]]},{"id":"858098fc.1e7c88","type":"http in","z":"1c510750.057029","name":"","url":"/users","method":"get","upload":false,"swaggerDoc":"","x":140,"y":80,"wires":[["80bff0.aac0301"]]},{"id":"38a6a224.e5342e","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":80,"wires":[]},{"id":"1463f353.76ca2d","type":"function","z":"1c510750.057029","name":"function for client","func":"try{\n    const payload = global.get(\"SequelizeModelValue['USER']\");\n    if(payload === undefined || payload === null){\n        msg.payload = 'Incorrect property access error!'\n        msg.statusCode = 500\n    }\n    else{\n        msg.payload = payload\n        msg.statusCode = 200;\n    } \n}catch(e){\n    msg.payload = 'Internal Server Error!' + e\n    msg.statusCode = 500;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":80,"wires":[["38a6a224.e5342e"]]},{"id":"88a8c749.5257e8","type":"inject","z":"8d5a863f.391318","name":"Initiate Define Model","topic":"","payload":"hello","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":"1","x":210,"y":500,"wires":[["69da8478.50367c"]]},{"id":"daaf628c.ed824","type":"comment","z":"8d5a863f.391318","name":"Call Async function and set values in flow variable","info":"","x":280,"y":460,"wires":[]},{"id":"69da8478.50367c","type":"function","z":"8d5a863f.391318","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')();\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data)\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":510,"y":500,"wires":[["1da79ea5.562611"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"963e975.2348668","type":"http in","z":"1c510750.057029","name":"","url":"/user","method":"post","upload":false,"swaggerDoc":"","x":140,"y":160,"wires":[["17f8797f.916367"]]},{"id":"a1cf6983.4a9a48","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":160,"wires":[]},{"id":"17f8797f.916367","type":"function","z":"1c510750.057029","name":"Add User Model","func":"try {\n    const User = global.get('SequelizeModel').User;\n    if(User === undefined || User === null){\n        msg.payload = 'Incorrect property access error!'\n        msg.statusCode = 500\n    }\n    else{\n        User.create({ firstName: msg.payload.firstName, lastName: msg.payload.lastName });\n        msg.payload = 'Model added'\n        msg.statusCode = 200;\n    }\n    \n}catch(err) {\n  msg.payload = \"Error adding data, \" + err.message\n  msg.statusCode = 500\n}\n\n return msg;","outputs":1,"noerr":0,"x":380,"y":160,"wires":[["dbad306e.86d79"]]},{"id":"7f76564.78659a8","type":"http in","z":"1c510750.057029","name":"","url":"/user","method":"get","upload":false,"swaggerDoc":"","x":140,"y":120,"wires":[["ec1cbbac.5cd078"]]},{"id":"9bb57d17.d91c9","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":120,"wires":[]},{"id":"d42b2290.febea","type":"function","z":"1c510750.057029","name":"function for client","func":"try{\n    if(msg.req.query.id === undefined){\n        msg.payload = \"Invalid url\"\n        msg.statusCode = 500\n    }else{\n        const users = global.get(\"SequelizeModelValue['USER']\");\n        if(users === undefined || users === null){\n            msg.payload = 'Incorrect property access error!'\n            msg.statusCode = 500\n        }else{\n            msg.payload = users.filter( usr => usr.id == msg.req.query.id );\n            msg.statusCode = 200\n        }\n    }\n}catch(e){\n    msg.payload = 'Internal Server Error!' + e\n    msg.statusCode = 500;\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":120,"wires":[["9bb57d17.d91c9"]]},{"id":"1da79ea5.562611","type":"debug","z":"8d5a863f.391318","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":730,"y":500,"wires":[]},{"id":"f08f0472.1729f8","type":"http in","z":"1c510750.057029","name":"","url":"/user","method":"put","upload":false,"swaggerDoc":"","x":140,"y":200,"wires":[["85d40026.0d98f"]]},{"id":"7e092926.c58188","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":200,"wires":[]},{"id":"e914d4cf.3c68a8","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('USER');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;\n","outputs":1,"noerr":0,"x":690,"y":200,"wires":[["7e092926.c58188"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"85d40026.0d98f","type":"function","z":"1c510750.057029","name":"Update User Model","func":"try {\n    const User = global.get('SequelizeModel').User;\n    if(msg.payload.id === undefined || msg.payload.id === null){\n        msg.payload = 'Id not supplied!'\n        msg.statusCode = 500\n    }else{\n        if(User === undefined || User === null){\n        msg.payload = 'Incorrect property access error!'\n        msg.statusCode = 500\n        }\n        else{\n            User.update({\n            firstName: msg.payload.firstName,\n            lastName: msg.payload.lastName\n            },{\n                where:{\n                    id: msg.payload.id\n                }\n            })\n            msg.payload = 'Model updated'\n            msg.statusCode = 200;\n        }\n    }\n}catch(err) {\n  msg.payload = \"Error updating model, \" + err.message\n  msg.statusCode = 500\n}\n return msg;","outputs":1,"noerr":0,"x":390,"y":200,"wires":[["e914d4cf.3c68a8"]]},{"id":"12d680fd.19ee1f","type":"http in","z":"1c510750.057029","name":"","url":"/user","method":"delete","upload":false,"swaggerDoc":"","x":150,"y":240,"wires":[["1b49dfad.d981d"]]},{"id":"acf99878.49acb8","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":240,"wires":[]},{"id":"21710f85.39d75","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('USER');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":240,"wires":[["acf99878.49acb8"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"1b49dfad.d981d","type":"function","z":"1c510750.057029","name":"Delete User Model","func":"try {\n    const User = global.get('SequelizeModel').User;\n    if(msg.payload.id === undefined || msg.payload.id === null){\n        msg.payload = 'Id not supplied!'\n        msg.statusCode = 500\n    }else{\n        if(User === undefined || User === null){\n        msg.payload = 'Incorrect property access error!'\n        msg.statusCode = 500\n        }\n        else{\n            User.destroy({\n                where: {\n                id : msg.payload.id\n                }\n            })\n            msg.payload = 'Model deleted'\n            msg.statusCode = 200;\n        }\n    }\n}catch(err) {\n  msg.payload = \"Error deleting model, \" + err.message\n  msg.statusCode = 500\n}\n return msg;","outputs":1,"noerr":0,"x":390,"y":240,"wires":[["21710f85.39d75"]]},{"id":"ec1cbbac.5cd078","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('USER');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;\n","outputs":1,"noerr":0,"x":390,"y":120,"wires":[["d42b2290.febea"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"80bff0.aac0301","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('USER');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;\n","outputs":1,"noerr":0,"x":390,"y":80,"wires":[["1463f353.76ca2d"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"dbad306e.86d79","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('USER');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['USER']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;\n","outputs":1,"noerr":0,"x":690,"y":160,"wires":[["a1cf6983.4a9a48"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"f9d2ee46.0445d","type":"http request","z":"5ae68398.7fae3c","name":"Request to End Point","method":"GET","ret":"txt","paytoqs":false,"url":"{{{ payload }}}","tls":"","persist":false,"proxy":"","authType":"","x":240,"y":160,"wires":[["49706144.09e9b"]]},{"id":"110b5667.d8273a","type":"function","z":"5ae68398.7fae3c","name":"Set OK Status","func":"msg.payload = '<div class=\"p-3 mb-2 bg-success text-white\">' + msg.requested_endpoint_name + ' : ' + msg.requested_endpoint + '</div>';\nmsg.statusCode = 200;\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":120,"wires":[["74f4f9.03609b08"]]},{"id":"49706144.09e9b","type":"switch","z":"5ae68398.7fae3c","name":"","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"eq","v":"ENOTFOUND","vt":"str"},{"t":"eq","v":"404","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":4,"x":430,"y":160,"wires":[["110b5667.d8273a","6b520ca8.ce4a44"],["a60661fd.54ef8","85324042.76769"],["a60661fd.54ef8","26e29791.de7638"],["3b7ce7a8.d9a418"]]},{"id":"a60661fd.54ef8","type":"function","z":"5ae68398.7fae3c","name":"Set Down Status","func":"msg.payload = '<div class=\"p-3 mb-2 bg-danger text-white\">' + msg.requested_endpoint_name + ' : ' + msg.requested_endpoint + '</div>';\nmsg.statusCode = 200;\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":160,"wires":[["74f4f9.03609b08"]]},{"id":"3b7ce7a8.d9a418","type":"function","z":"5ae68398.7fae3c","name":"Set Degraded Status","func":"msg.payload = '<div class=\"p-3 mb-2 bg-warning text-dark\">' + msg.requested_endpoint_name + ' : ' + msg.requested_endpoint + '</div>';\nmsg.statusCode = 200;\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":200,"wires":[["74f4f9.03609b08"]]},{"id":"4709c7b5.9f14d8","type":"function","z":"5ae68398.7fae3c","name":"Set Requested End Point","func":"var temp_payload = msg.payload.split('~');\nmsg.requested_endpoint_name = temp_payload[0];\nmsg.requested_endpoint = temp_payload[1];\nmsg.payload = msg.requested_endpoint;\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":80,"wires":[["ce9dca7e.a60438"]]},{"id":"74f4f9.03609b08","type":"template","z":"5ae68398.7fae3c","name":"Output Template","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{{payload}}}","output":"str","x":900,"y":160,"wires":[["f1d3176d.6a3c18"]]},{"id":"f1d3176d.6a3c18","type":"function","z":"5ae68398.7fae3c","name":"Set Status Output","func":"msg.statusOutput = msg.statusOutput + msg.payload;\nmsg.payload = msg.statusOutput;\nreturn msg;","outputs":1,"noerr":0,"x":1110,"y":160,"wires":[[]]},{"id":"ce9dca7e.a60438","type":"function","z":"5ae68398.7fae3c","name":"Set Status Output","func":"if(msg.statusOutput === undefined)\nmsg.statusOutput = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":120,"wires":[["f9d2ee46.0445d"]]},{"id":"6b520ca8.ce4a44","type":"debug","z":"5ae68398.7fae3c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":300,"wires":[]},{"id":"85324042.76769","type":"debug","z":"5ae68398.7fae3c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":340,"wires":[]},{"id":"26e29791.de7638","type":"debug","z":"5ae68398.7fae3c","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":570,"y":380,"wires":[]},{"id":"e374e081.65588","type":"comment","z":"8d5a863f.391318","name":"This is just for demo purspose","info":"","x":540,"y":400,"wires":[]},{"id":"c5bb4b8d.5c5218","type":"function","z":"8d5a863f.391318","name":"Define Admin","func":"let require = global.get('require');\nconst { DataTypes } = require('sequelize');\n\nvar sequelize = global.get('g-sequelize');\n\nconst Admin = sequelize.define('Admin', {\n  firstName: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  lastName: {\n    type: DataTypes.STRING\n  }\n});\nAdmin.sync({ alter: true });\n\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":320,"wires":[["72841d27.b47804"]]},{"id":"24ac583b.cad188","type":"function","z":"8d5a863f.391318","name":"Define User Model","func":"let require = global.get('require');\nconst { Sequelize, DataTypes } = require('sequelize');\n\nconst sequelize = new Sequelize(env.get('DATABASE_URL'));\nconst User = sequelize.define('User', {\n  firstName: {\n    type: DataTypes.STRING,\n    allowNull: false\n  },\n  lastName: {\n    type: DataTypes.STRING\n  }\n});\nUser.sync({ alter: true });\nglobal.set(\"g-sequelize\", sequelize);\n\nreturn msg;","outputs":1,"noerr":0,"x":300,"y":320,"wires":[["c5bb4b8d.5c5218"]]},{"id":"72841d27.b47804","type":"debug","z":"8d5a863f.391318","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":660,"y":320,"wires":[]},{"id":"56a62801.c5e5f8","type":"inject","z":"8d5a863f.391318","name":"Update Model","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":320,"wires":[["24ac583b.cad188"]]},{"id":"ee4f9ac9.7c1178","type":"function","z":"9541a9be.f4e998","name":"Init","func":"let require = global.get('require')\nconst { Sequelize } = require('sequelize');\nmsg.sequelize = new Sequelize('cam_qa_mayank', 'cgadmin@camillo-rental-db', 'cygrp#camillo914', {\n    host: 'camillo-rental-db.mysql.database.azure.com',\n    port: 3306,\n    dialect: 'mysql'\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":140,"wires":[["3a5122aa.7f25ee"]]},{"id":"ad19945d.6b12d8","type":"inject","z":"9541a9be.f4e998","name":"Create Model","topic":"","payload":"CreateModel","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":159,"y":140,"wires":[["ee4f9ac9.7c1178"]]},{"id":"3a5122aa.7f25ee","type":"function","z":"9541a9be.f4e998","name":"BuildingModel","func":"let require = global.get('require');\nconst { DataTypes } = require('sequelize');\n\nmsg.BuildingModel = msg.sequelize.define('Building', {\n ID: {type: DataTypes.INTEGER.UNSIGNED, allowNull: false, primaryKey:true },\n abbreviation: { type: DataTypes.TEXT, allowNull: true},\n active: {type: DataTypes.BOOLEAN, allowNull: true},\n address: {type: DataTypes.TEXT, allowNull: true},\n address2: {type: DataTypes.TEXT, allowNull: true},\n areaUnits: {type: DataTypes.TEXT, allowNull: true},\n availableDate: {type: DataTypes.DATE, allowNull: true},\n category: {type: DataTypes.TEXT, allowNull: true},\n city: {type: DataTypes.TEXT, allowNull: true},\n comments: {type: DataTypes.TEXT, allowNull: true},\n country: {type: DataTypes.TEXT, allowNull: true},\n county: {type: DataTypes.TEXT, allowNull: true},\n drivingDirections: {type: DataTypes.TEXT, allowNull: true},\n featuredForRent: {type: DataTypes.BOOLEAN, allowNull: true},\n featuredForSale: {type: DataTypes.BOOLEAN, allowNull: true},\n floorNumber: {type: DataTypes.INTEGER.UNSIGNED, allowNull: true},\n forSale: {type: DataTypes.BOOLEAN, allowNull: true},\n latitude: {type: DataTypes.FLOAT, allowNull: true},\n leaseTerms: {type: DataTypes.INTEGER.UNSIGNED, allowNull: true},\n leaseTermsUnits: {type: DataTypes.TEXT, allowNull: true},\n leasingAgents: {type: DataTypes.TEXT, allowNull: true},\n longitude: {type: DataTypes.FLOAT, allowNull: true},\n maintenanceNotice: {type: DataTypes.TEXT, allowNull: true},\n managementContractEndDate: {type: DataTypes.DATE, allowNull: true},\n managementContractStartDate: {type: DataTypes.DATE, allowNull: true},\n managementFeeType: {type: DataTypes.TEXT, allowNull: true},\n marketingName: {type: DataTypes.TEXT, allowNull: true},\n mlsLeaseNumber: {type: DataTypes.TEXT, allowNull: true},\n mlsNumber: {type: DataTypes.TEXT, allowNull: true},\n multiUnit: {type: DataTypes.TEXT, allowNull: true},\n name: {type: DataTypes.TEXT, allowNull: true},\n neighbourhood: {type: DataTypes.TEXT, allowNull: true},\n numberBathrooms: {type: DataTypes.DOUBLE.UNSIGNED, allowNull: true},\n numberBedrooms: {type: DataTypes.DOUBLE.UNSIGNED, allowNull: true},\n numberFloors: {type: DataTypes.INTEGER.UNSIGNED, allowNull: true},\n otherTenantCharges: {type: DataTypes.TEXT, allowNull: true},\n parcelNumber: {type: DataTypes.TEXT, allowNull: true},\n petsAllowed: {type: DataTypes.BOOLEAN, allowNull: true},\n portfolio: {type: DataTypes.TEXT, allowNull: true},\n published: {type: DataTypes.BOOLEAN, allowNull: true},\n publishedForRent: {type: DataTypes.BOOLEAN, allowNull: true},\n publishedForSale: {type: DataTypes.BOOLEAN, allowNull: true},\n ready: {type: DataTypes.BOOLEAN, allowNull: true},\n rentable: {type: DataTypes.BOOLEAN, allowNull: true},\n salePrice: {type: DataTypes.FLOAT.UNSIGNED, allowNull: true},\n saleTerms: {type: DataTypes.TEXT, allowNull: true},\n searchTag: {type: DataTypes.TEXT, allowNull: true},\n shortDescription: {type: DataTypes.TEXT, allowNull: true},\n smokingAllowed: {type: DataTypes.BOOLEAN, allowNull: true},\n specials: {type: DataTypes.TEXT, allowNull: true},\n state: {type: DataTypes.TEXT, allowNull: true},\n status: {type: DataTypes.TEXT, allowNull: true},\n syndicate: {type: DataTypes.TEXT, allowNull: true},\n targetDeposit: {type: DataTypes.TEXT, allowNull: true},\n targetRent: {type: DataTypes.FLOAT.UNSIGNED, allowNull: true},\n totalArea: {type: DataTypes.FLOAT.UNSIGNED, allowNull: true},\n type: {type: DataTypes.TEXT, allowNull: true},\n unitAmenities: {type: DataTypes.TEXT, allowNull: true},\n websit: {type: DataTypes.TEXT, allowNull: true},\n yearBuilt: {type: DataTypes.INTEGER.UNSIGNED, allowNull: true},\n zip: {type: DataTypes.TEXT, allowNull: true},\n // TODO: Add relationships for below fields\n//  notes: {type: DataTypes.INTEGER.UNSIGNED, allowNull: true},\n//  customFields: {},\n//  buildingPhotos: {},\n//  managementFees: {},\n//  documents: {},\n//  propertyManagers: {},\n createdAt: { type: DataTypes.DATE, defaultValue: DataTypes.NOW },\n // TODO: Add logic to update 'updatedAt' value only on update query \n updatedAt: {type: DataTypes.DATE, defaultValue: DataTypes.NOW }\n});\nmsg.UserModel.sync({alter:true})\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":220,"wires":[["fab2a5b2.b92148"]]},{"id":"f73d7986.acd3e8","type":"http in","z":"1c510750.057029","name":"[get] /rentals","url":"/rentals","method":"get","upload":false,"swaggerDoc":"","x":150,"y":300,"wires":[["94be5523.bdc838"]]},{"id":"94be5523.bdc838","type":"function","z":"1c510750.057029","name":"Call Async Function","func":"let sequelizeData = global.get('getSequelizeModel')('BUILDING');\n\nsequelizeData.then(data => {\n    global.set(\"SequelizeModelValue['BUILDING']\", data);\n}).catch(error => {\n    node.error(error);\n});\n\nreturn msg;\n","outputs":1,"noerr":0,"x":400,"y":300,"wires":[["5a6253ca.1c8f7c"]],"icon":"font-awesome/fa-arrow-circle-down"},{"id":"fab2a5b2.b92148","type":"function","z":"9541a9be.f4e998","name":"Define Async Function","func":"async function getSequelizeModel() {\n  const User = global.get('SequelizeModel').Building;\n  let promise = new Promise((resolve, reject) => {\n    resolve(Building.findAll())\n  });\n  return await promise;\n}\n\nglobal.set('getSequelizeModel', getSequelizeModel);\n","outputs":0,"noerr":0,"x":380,"y":300,"wires":[],"icon":"font-awesome/fa-arrow-circle-up"},{"id":"5a6253ca.1c8f7c","type":"function","z":"1c510750.057029","name":"function for client","func":"try{\n    const payload = global.get(\"SequelizeModelValue['BUILDING']\");\n    if(payload === undefined || payload === null){\n        msg.payload = 'Incorrect property access error!'\n        msg.statusCode = 500\n    }\n    else{\n        msg.payload = payload\n        msg.statusCode = 200;\n    } \n}catch(e){\n    msg.payload = 'Internal Server Error!' + e\n    msg.statusCode = 500;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":300,"wires":[["259ac9bb.f7bb86"]]},{"id":"259ac9bb.f7bb86","type":"http response","z":"1c510750.057029","name":"","statusCode":"","headers":{},"x":950,"y":300,"wires":[]}]
